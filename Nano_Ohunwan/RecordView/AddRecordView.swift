//
//  AddRecord.swift
//  Nano_Ohunwan
//
//  Created by Yu ahyeon on 2022/05/01.
//

import SwiftUI

struct AddRecordView: View{
    var AddDate: Date
    //CustomDataPickerÏóêÏÑú ÎÇ†Ïßú ÏÑ†ÌÉù Ïãú Ìï¥Îãπ Îç∞Ïù¥ÌÑ∞Î•º ÎÑòÍ≤® Î∞õÍ∏∞ ÏúÑÌï¥ ÎßåÎì† Îπà Íπ°ÌÜµ
    
    static let dateformat: DateFormatter = {
        let formatter = DateFormatter()
        formatter.dateFormat = "YYYY. MM. dd (E)"
        formatter.locale = Locale(identifier:"ko_KR")
        return formatter
    }()
    //Date FormatterÏùÑ ÏÇ¨Ïö©Ìï¥ÏÑú ÎÇ†ÏßúÎÖ∏Ï∂ú ÌòïÏãùÏùÑ ÏßÄÏ†ï
    
    @State var dataStruct = Record(foodName: "Îã≠Í∞ÄÏä¥ÏÇ¥", ImgURL: "food_1", foodText: "Í∑ºÎ†• ÏúÑÏ£ºÏùò Îã®Îã®Ìïú Ïö¥Îèô!", summaryText: "Ïò§Îäò Ïö¥Îèô Ïß±Ïûº", exerciseText: "ÎÑàÎ™®Ïû¨ÎØ∏ÏûàÎã§", todayCondition: "üòÄ", todayWeather: "sun.max", drinkWater: 2, exerciseTime: 60.0, recordDate: getSmpleDate(offset: 1))
    //Ïä§Ìä∏Îü≠Ìä∏Îäî Î∂ïÏñ¥ÎπµÌãÄ, Îã§Î•∏ Î∑∞ÏóêÏÑú Î∂àÎü¨ÏôÄ ÏÇ¨Ïö©Ìï† Ïàò ÏûàÏùå
    
    //    @State private var summaryText = ""
    @State private var summarytextColor = Color.gray
    //    @State private var exerciseText = "Ïò§Îäò Ìïú Ïö¥ÎèôÏù¥ÎÇò ÏÜåÍ∞êÏùÑ Ï†ÅÏñ¥Î≥¥ÏÑ∏Ïöî!"
    @State private var exercisetextColor = Color.gray
    @Binding var foodList: [Record]
//    var recordData: Record
    //    @Binding var recordData: RecordMetaData
    
    var body: some View{
        VStack{
            //Ïû¨Î£åÏÑ†ÌÉù
            AddFood(dataStruct: $dataStruct)
            
            //ÎÇ†Ïßú
            Text("\(AddDate, formatter: AddRecordView.dateformat)")
                .padding(.vertical, 20)
            
            //ÌïúÏ§ÑÌèâ ÏûëÏÑ±
            TextField("Ïò§ÎäòÏùò Ïö¥ÎèôÏùÑ ÌïúÎßàÎîîÎ°ú!", text: $dataStruct.summaryText)
                .padding(.horizontal, 20)
                .font(.system(size: 20).bold())
                .onTapGesture {
                    dataStruct.summaryText = ""
                    summarytextColor = Color.black
                }
                .foregroundColor(summarytextColor)
                .multilineTextAlignment(.center)
            //Í∏∞ÌÉÄ ÏöîÏÜå ÏÑ†ÌÉù
            AddEtc()
                .padding(.vertical, 10)
            
            //ÌÉùÏä§Ìä∏ ÏûëÏÑ±
            TextEditor(text: $dataStruct.exerciseText)
                .padding(.horizontal, 20)
                .onTapGesture {
                    dataStruct.exerciseText = ""
                    exercisetextColor = Color.black
                    //ÌîåÎ†àÏù¥Ïä§ ÌôÄÎçîÏôÄ ÏûÖÎ†• ÌÖçÏä§Ìä∏Î•º Íµ¨Î∂ÑÌïòÍ∏∞ ÏúÑÌï¥
                    //textColor Î≥ÄÏàòÎ•º Ï§òÏÑú Î≥ÄÍ≤Ω Í∞íÏùÑ ÌÉ≠ Ï†úÏä§Ï≥êÏóê ÎÑ£Ïñ¥Ï§å
                }
                .foregroundColor(exercisetextColor)
            
            
            Spacer()
        }
//        .onAppear(){
//            print(recordData)
//        }
        .toolbar {
            Button(action: {
                print(dataStruct)
                
                dataStruct.recordDate = AddDate
                foodList.append(dataStruct)
//                $foodList.append(Record: dataStruct, recordDate: AddDate))
            }, label: {Text("ÏôÑÎ£å")})
            //append : Î¶¨Ïä§Ìä∏Ïóê Ï∂îÍ∞ÄÌï† Ïàò ÏûàÎäî Ìï®Ïàò (ÌÉÄÏûÖÏï† ÎßûÍ∞ú Ïç®ÏïºÌï®)
            //RecordMetaData(record: [dataStruct]) = Ïù¥ÎØ∏ recordÎäî Î∞∞Ïó¥Ïù¥Í∏∞ ÎïåÎ¨∏Ïóê []Î•º Ïç®Ï§òÏïºÌï®
            //Í∑ºÎç∞ Ïò§Î•òÏò§ÏßÄÍ≤å ÎÇòÏÑú Î∞∞Ïó¥ ÏßÄÏõÄ
        }
    }
    // ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò Î∑∞ ÏïàÏóêÏÑúÎßå Î≥¥Ïïî
    // ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò Ïö∞Ï∏° ÏÉÅÎã®Ïóê Îì§Ïñ¥Í∞ÑÎã§.
    
}

struct AddFood: View{
    //    @State private var foodIndex: String = "default"
    @State var showSheet = false
    @Binding var dataStruct: Record
    // : Îí§Ïóê  view Í∞ôÏùÄ ÌîÑÎ°úÌÜ†ÏΩúÎ°ú Ïä§Ìä∏Îü≠Ìä∏Î•º Î∂àÎü¨Ïò¨ Ïàò ÏûáÎî∞
    
    var body: some View{
        Button(action: {
            showSheet.toggle()
        }){
            Image(dataStruct.ImgURL)
                .resizable()
                .frame(width: 250, height: 250)
                .fullScreenCover(isPresented: $showSheet, content: {
                    AddFoodScreen(dataStruct: $dataStruct)
                })
            //Î≥ÄÏàòÏóê Ïù¥ÎØ∏ÏßÄ Ïù¥Î¶ÑÏùÑ Ï£ºÍ≥† Ïù¥ÎØ∏ÏßÄÏóê Î≥ÄÏàòÎ•º Ï£ºÎ©¥ Ìï¥Îãπ Ïù¥ÎØ∏ÏßÄ Î∂àÎü¨Ïßê
            //Ïû¨Î£å Ï∂îÍ∞Ä Î≤ÑÌäº ÎîîÏûêÏù∏ ÎÇòÏ§ëÏóê Î∞îÍæ∏Í∏∞,,,
        }
        
    }
}

struct AddEtc: View{
    @State var showModal = false
    @State private var weatherIndex: String = "sun.min"
    @State private var conditionrIndex: String = "face.smiling"
    //    @State private var waterIndex: Bool = false
    //    @State private var timeIndex: Bool = false
    @State var dataStruct = Record(foodName: "ÏùåÏãùÏóÜÏùå", ImgURL: "default", foodText: "ÏÑ§Î™Ö", summaryText: "", exerciseText: "Ïò§Îäò Ìïú Ïö¥ÎèôÏù¥ÎÇò ÏÜåÍ∞êÏùÑ Ï†ÅÏñ¥Î≥¥ÏÑ∏Ïöî!", todayCondition: "face.smiling", todayWeather: "sun.min", drinkWater: 0, exerciseTime: 0.0, recordDate: getSmpleDate(offset: 8))
    
    var body: some View{
        
        Button(action: {
            self.showModal = true
        }, label: {
            HStack(spacing: 30){
                
                if dataStruct.todayCondition == "face.smiling" {
                    Image(systemName: "face.smiling")
                        .foregroundColor(.gray)
                } else {
                    Text(dataStruct.todayCondition)
                }//Ïª®ÎîîÏÖò
                //ÎîîÌè¥Ìä∏ Ïù¥ÎØ∏ÏßÄÎäî sf Ïã¨Î≥ºÏù∏Îç∞ ÏÑ†ÌÉùÏßÄÎäî ÌÖçÏä§Ìä∏ÎùºÏÑú IFÎ¨∏ÏùÑ ÏÇ¨Ïö©Ìï¥ ÌëúÌòÑÌïòÍ∏∞Î°úÌï®
                
                if dataStruct.todayWeather == "sun.min" {
                    Image(systemName: "sun.min")
                        .foregroundColor(.gray)
                } else {
                    Image(systemName: dataStruct.todayWeather)
                } //ÎÇ†Ïî®
                
                
                if dataStruct.drinkWater > 0 {
                    Image(systemName: "drop.fill")
                        .foregroundColor(.blue)
                } else{
                    Image(systemName: "drop")
                        .foregroundColor(.gray)
                } //ÎßàÏã†Î¨º
                
                if dataStruct.exerciseTime > 0.0 {
                    Image(systemName: "clock")
                        .foregroundColor(.blue)
                } else {
                    Image(systemName: "clock")
                        .foregroundColor(.gray)
                }//Ïö¥ÎèôÏãúÍ∞Ñ
            }
            .font(.system(size: 26))
            .frame(maxWidth: .infinity)
            .padding(.vertical, 15)
            .background(
                RoundedRectangle(cornerRadius: 10)
                    .foregroundColor(.white)
                    .shadow(color: .black.opacity(0.1), radius: 10, x: 0, y: 0)
            )
            .padding(.horizontal, 16)
        })
        .sheet(isPresented: self.$showModal) {
            AddEtcModal(
                //                weatherIndex: $weatherIndex,
                //                conditionrIndex:$conditionrIndex,
                //                waterIndex: $waterIndex,
                //                timeIndex: $timeIndex,
                dataStruct: $dataStruct
            )
        }
        
        
    }
}

//struct AddRecord_Previews: PreviewProvider {
//    static var previews: some View {
//        AddRecordView(AddDate: Date.now)
//    }
//}
